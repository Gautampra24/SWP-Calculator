<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SWP Calculator with Inflation Impact</title>
    <style>
        .calculator-container {
            display: flex;
            justify-content: space-between;
            width: 100%;
            
            background: white;
            border-radius: 8px;
            margin-top: 20px;
margin-bottom: 20px;
            border: 3px solid #097592;
            padding: 10px;
            flex-direction: row;
        }

        .input-container {
            width: 60%;
        }

        .input-container label {
            display: inline-block;
            width: 75%;
            margin-bottom: 5px;
        }

        .input-container input[type="number"] {
            width: 23%;
            display: inline-block;
            padding: 1px;
            padding-left: 10px;
            margin-left: 2px;
            border: 0.5px solid #097592;
            border-radius: 16px;
        }
.input-container input[type="range"] {
            width: 30%;
            display: inline-block;
            padding: 2px;
            padding-left: 10px;
            margin-left: 5px;
           
        }

        .input-container input[type="range"] {
            width: 100%;
            margin-bottom: 20px;
            -webkit-appearance: none;
            appearance: none;
            height: 3px;
            border-radius: 5px;
            background: #d3d3d3;
            outline: none;
            opacity: 0.9;
            transition: opacity 0.2s;
        }

        .input-container input[type="range"]::-webkit-slider-thumb {
            -webkit-appearance: none;
            appearance: none;
            width: 20px;
            height: 20px;
            border-radius: 50%;
            background: #4caf50;
            cursor: pointer;
            transition: background 0.3s;
        }

        .input-container input[type="range"]::-webkit-slider-thumb:hover {
            background: #45a049;
        }

        .input-container button {
            padding: 1px;
            padding-left: 20px;
            padding-right: 5px;
            background-color: #205d73;
            color: white;
            border: none;
            border-radius: 15px;
            cursor: pointer;
            margin-bottom: 10px;
            margin-top: 5px;
        }

        .input-container button:hover {
            background-color: #45a049;
        }

        .chart-container {
            width: 35%;
        }

        .chart-container canvas {
            width: 100%;
            height: 150px; /* Adjusted height */
        }

        .results {
            margin-bottom: 0px;
        }

        .results p {
            margin: 0;
            font-size: 17px;
            font-weight: bold;
        }

        /* Media query for mobile devices */
        @media (max-width: 768px) {
            .calculator-container {
                flex-direction: column;
            }

            .input-container {
                width: 100%;
            }

            .chart-container {
                width: 100%;
                margin-top: 20px;
            }
        }
    </style>
    <!-- Include Chart.js and Chart.js Datalabels Plugin -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels"></script>
</head>
<body>

    <div class="calculator-container">
        <div class="input-container">
            <label for="totalInvestment">Total Investment (₹): </label>
            <input type="number" id="totalInvestment" value="500000">
            <input type="range" id="totalInvestmentRange" min="100000" max="100000000" value="500000">

            <label for="monthlyWithdrawal">Monthly Withdrawal Amount (₹): </label>
            <input type="number" id="monthlyWithdrawal" value="5000">
            <input type="range" id="monthlyWithdrawalRange" min="1000" max="500000" value="5000">

            <label for="rate">Annual Interest Rate (%): </label>
            <input type="number" id="rate" value="12">
            <input type="range" id="rateRange" min="1" max="40" value="12">

            <label for="years">Investment/Withdrawal Period (Years): </label>
            <input type="number" id="years" value="10">
            <input type="range" id="yearsRange" min="1" max="40" value="10">

            <!-- Inflation rate -->
            <label for="inflation">Annual Inflation Rate (%): </label>
            <input type="number" id="inflation" value="6">
            <input type="range" id="inflationRange" min="1" max="20" value="6">

            <div class="results" id="results">
                
            </div>
        </div>

        <div class="chart-container">
            <canvas id="pieChart"></canvas>
        </div>
    </div>

    <script>
        const totalInvestmentInput = document.getElementById('totalInvestment');
        const monthlyWithdrawalInput = document.getElementById('monthlyWithdrawal');
        const rateInput = document.getElementById('rate');
        const yearsInput = document.getElementById('years');
        const inflationInput = document.getElementById('inflation');

        const totalInvestmentRange = document.getElementById('totalInvestmentRange');
        const monthlyWithdrawalRange = document.getElementById('monthlyWithdrawalRange');
        const rateRange = document.getElementById('rateRange');
        const yearsRange = document.getElementById('yearsRange');
        const inflationRange = document.getElementById('inflationRange');

        // Synchronize input fields with range sliders
        totalInvestmentRange.addEventListener('input', function() {
            totalInvestmentInput.value = totalInvestmentRange.value;
            calculateWithdrawals();
        });

        monthlyWithdrawalRange.addEventListener('input', function() {
            monthlyWithdrawalInput.value = monthlyWithdrawalRange.value;
            calculateWithdrawals();
        });

        rateRange.addEventListener('input', function() {
            rateInput.value = rateRange.value;
            calculateWithdrawals();
        });

        yearsRange.addEventListener('input', function() {
            yearsInput.value = yearsRange.value;
            calculateWithdrawals();
        });

        inflationRange.addEventListener('input', function() {
            inflationInput.value = inflationRange.value;
            calculateWithdrawals();
        });

        // Add input event listeners for manual input changes
        totalInvestmentInput.addEventListener('input', calculateWithdrawals);
        monthlyWithdrawalInput.addEventListener('input', calculateWithdrawals);
        rateInput.addEventListener('input', calculateWithdrawals);
        yearsInput.addEventListener('input', calculateWithdrawals);
        inflationInput.addEventListener('input', calculateWithdrawals);

        // Function to initialize the chart
        const ctx = document.getElementById('pieChart').getContext('2d');
        let pieChart = new Chart(ctx, {
            type: 'pie',
            data: {
                labels: ['Initial Investment', 'Total Withdrawals', 'Remaining Amount', 'Impact of Inflation'],
                datasets: [{
                    data: [0, 0, 0, 0], // Initialize with zeros
                    backgroundColor: ['#4caf50', '#ff9800', '#f44336', '#2196f3']
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    datalabels: {
                        color: '#000000',
                        font: {
                            size: 13,
                            weight: 'bold'
                        },
                        formatter: (value, ctx) => {
                            return '₹' + value.toLocaleString('en-IN');
                        }
                    }
                }
            },
            plugins: [ChartDataLabels]
        });

        function formatNumber(num) {
            return num.toLocaleString('en-IN', { maximumFractionDigits: 2 });
        }

        function calculateWithdrawals() {
            const totalInvestment = parseFloat(totalInvestmentInput.value);
            const monthlyWithdrawal = parseFloat(monthlyWithdrawalInput.value);
            const annualRate = parseFloat(rateInput.value) / 100;
            const inflationRate = parseFloat(inflationInput.value) / 100; // Convert inflation to decimal
            const years = parseFloat(yearsInput.value);
            const months = years * 12; // Convert years to months
            const monthlyRate = annualRate / 12;

            let totalWithdrawn = 0;
            let remainingAmount = totalInvestment;
            let totalInflationImpact = 0;

            for (let i = 0; i < months; i++) {
                if (remainingAmount <= 0) break; // Stop if the remaining amount is zero or negative
                
                // Apply interest to the remaining amount
                remainingAmount *= (1 + monthlyRate);

                // Adjust remaining amount for inflation
                const inflationAdjustment = remainingAmount * (inflationRate / 12);
                totalInflationImpact += inflationAdjustment; // Track total inflation impact
                remainingAmount -= inflationAdjustment;

                // Withdraw the monthly amount
                if (remainingAmount >= monthlyWithdrawal) {
                    remainingAmount -= monthlyWithdrawal;
                    totalWithdrawn += monthlyWithdrawal;
                } else {
                    totalWithdrawn += remainingAmount; // Withdraw remaining amount
                    remainingAmount = 0; // Set remaining amount to zero
                }
            }

            // Prepare results to display
            const resultsDiv = document.getElementById('results');
            resultsDiv.innerHTML = `
               <p style="color: #4caf50; font-size: 15px; font-weight: bold; margin-bottom: 10px;">
    Initial Investment: ₹${formatNumber(totalInvestment)} </p>
<p style="color: #ff9800; font-size: 15px; font-weight: bold; margin-bottom: 10px;">
    Total Withdrawals: ₹${formatNumber(totalWithdrawn)} </p>
<p style="color: #f44336; font-size: 15px; font-weight: bold; margin-bottom: 10px;">
    Impact of Inflation: ₹${formatNumber(totalInflationImpact)} </p>
<p style="color: #2196f3; font-size: 22px; font-weight: bold; text-align: center; background-color: #e3f2fd; padding: 5px; margin-top: 10px; border-radius: 10px;">
    Remaining Amount: ₹${formatNumber(remainingAmount)} </p>

<p style="font-size: 12px; color: #333;">Note: Here is Remaining Amount after deducting inflation amount.</p>



            `;

            // Update the pie chart data
            pieChart.data.datasets[0].data = [totalInvestment, totalWithdrawn, remainingAmount, totalInflationImpact];
            pieChart.update();
        }

        calculateWithdrawals(); // Initial calculation
    </script>

</body>
</html>